@startuml

'------------------
' INTERFACES
'------------------

interface IPlayer extends IGuesser, IThinker {
    void yourTurn()
    String getName()
    void newGame(int min, int max, String opponent, String type)
    boolean endOfGame(int numberOfGuesses, String opponent)
}

interface IGuesser {
    int makeGuess()
    void guessFeedback(Answer answer)
}

interface IThinker {
    Answer evaluateGuess(int guess, String opponent)
}

'------------------
' ABSTRACT CLASSES
'------------------

abstract class AComputerPlayer implements IPlayer {
    + void yourTurn()
    + boolean endOfGame(int numberOfGuesses, String opponent)
}

abstract class AHumanPlayer implements IPlayer {
    # static final Scanner scanner
    - String name
    + AComputerPlayer()
    + void yourTurn()
    + String getName()
    + void newGame(int min, int max, String opponent, String type)
    # boolean playAgain()
}

'------------------
' CLASSES
'------------------

class ComputerThinker extends AComputerPlayer {
    - int secretNumber
    + String getName()
    + void newGame(int min, int max, String opponent, String type)
    + Answer evaluateGuess(int guess, String opponent)
}

class ComputerGuesser extends AComputerPlayer {
    - int min
    - int max
    + String getName()
    + void newGame(int min, int max, String opponent, String type)
    + int makeGuess()
    + void guessFeedback(Answer answer)
}

class HumanThinker extends AHumanPlayer {
    + Answer evaluateGuess(int guess, String opponent)
    + boolean endOfGame(int numberOfGuesses, String opponent)
}

class HumanGuesser extends AHumanPlayer {
    + int makeGuess()
    + void guessFeedback(Answer answer)
    + boolean endOfGame(int numberOfGuesses, String opponent)
}

class GameControl {
    - final int min
    - final int max
    + GameControl(int min, int max)
    + void runGame(IPlayer thinker, IPlayer guesser)
}

class Main {
    - static Scanner scanner
    + static void main(String[] args)
    + static int chooseType(String s)
}

'------------------
' ENUMS
'------------------

enum Answer {
    TOO_LOW
    TOO_HIGH
    CORRECT
}

'------------------
' RELATIONS
'------------------

Main *-- GameControl

GameControl *-- IPlayer

@enduml